# 수 이어 쓰기 1
'''
# 규칙
    1 ~ 9 : 9개
    10 ~ 99 : 90개
    100 ~ 999 : 900개
# 풀이방법
    1. N의 자릿수를 파악하고
    2. N보다 적은 자릿수의 숫자 갯수를 위의 규칙으로 세서 더한다.
    3. 그리고 N과 같은 자릿수의 숫자를 세서 더한다.
'''
# 결혼식
'''
# 자료구조/알고리즘
    : dfs
# 풀이방법
    1. 입력받은 친구관계를 인접리스트로 만들고
    2. dfs로 완전탐색해서 친구관계를 센다.
'''
# 공통 부분 문자열
'''
# 자료구조/알고리즘
    : DP
# 풀이방법
    1. (문자열1의 길이) * (문자열2의 길이)를 크기로 하는 이차원 배열을 선언한다.
    2. str[i] == str[j]이면 f(i, j)는 f(i - 1, j - 1) += 1
    3. 이차원 배열 내의 가장 큰 수를 출력한다.
'''

# 보물섬
'''
# 자료구조/알고리즘
    : bfs
# 풀이방법
    1. L 마다 bfs를 실시해서 가장 먼 곳까지의 거리를 구한다.
    2. 모든 L에서 실시한 bfs의 결과 가장 먼 곳을 출력한다.
'''

# 새로운 게임 2
'''
# 자료구조/알고리즘
    : bfs
# 풀이방법
    1. 말의 위치를 기록하는 이차원 배열 1개와
    2. 바닥색을 표시한 이차원 배열 1개를 가지고 진행한다.
    3. 주어진 조건대로 bfs를 실시하고 종료조건을 만족하는 턴을 출력한다.
    4. 턴이 1000을 넘으면 -1을 출력한다.
'''

# 섬의 개수
'''
# 자료구조/알고리즘
    : dfs
# 풀이방법
    1. dfs를 상하좌우 + 대각선 4방향으로 실시한다.
'''

# 드래곤 커브
'''
# 자료구조/알고리즘
    : DP
# 풀이방법
    1. 드래곤 커브를 그리는 방법
        1. 드래곤 커브를 나타내는 배열은 커브 각 점의 좌표를 가지게 하고
        2. 각 세대별로 커브를 그리는 방향을 또 따로 저장한다.
        3. 새로운 커브는 이전 세대를 그리던 방향을 전환해서 그리면 된다.
    2. 드래곤 커브의 각 점을 다른 이차원 배열에 저장하고 사각갯수를 센다.
'''
# 스타트와 링크
'''
# 자료구조/알고리즘
    : combination
# 풀이방법
    1. 팀을 짤 수 있는 모든 경우를 조합을 이용해서 구하고
    2. 각 조합에 대해 능력치를 구해서
    3. 차이의 최솟값을 구한다.
'''
# 가스관
'''
# 자료구조/알고리즘
    : dfs
# 풀이방법
    1. 좌표를 만나면 완전탐색해서 모든 파이프를 찾고 끊어진 위치의 파이프를 구한다.
        : 파이프 방향에 따라서 다음에 탐색하는 곳이 달라짐.
    2. 파이프가 끊어진 위치를 기반으로 지워진 파이프의 위치와 종류를 찾아냄.
'''
# 단어 수학
'''
# 자료구조/알고리즘
    : 그리디
# 풀이방법
    1. 각 단어의 자릿수를 구하고
    2. 높은 자릿수 부터 내려가면서 9부터 역순으로
    3. 알파벳에 배정한다.
'''
# 미친 로봇
'''
# 자료구조/알고리즘
    : 브루탈 포스, 백트래킹
# 풀이방법
    1. 모든 가능한 이동 경로에 대해서 탐색한다.
        : 모든 가능한 이동 경로로 이동할 확률을 별도로 구한다.
    2. 처음의 로봇의 위치를 (0, 0)으로 가정하고 모든 이동 경로에 대해서 단순한 경로인지 확인한다.
    3. 단순한 경로일 경로의 확률을 다 더한다.
'''

# 큐빙
'''
# 자료구조/알고리즘
    : 구현
# 풀이방법
    1. 3차원 배열을 만들어서 큐브의 현재 상태를 표현한다.
    2. 돌리는 면과 방향에 따라 큐브의 현재 상태를 업데이트하는 함수를 구현한다.
    3. 입력에 맞추어 규브 상태를 업데이트해 출력한다.
'''
# 사다리 조작
'''
# 자료구조/알고리즘
    
# 풀이방법
'''


# 문제 이름
'''
# 자료구조/알고리즘
# 풀이방법
'''